# stubs/misc.pyi
from __future__ import annotations

from enum import IntEnum
from typing import Any, List, Sequence, Union

class Item: ...
class Mobile: ...
class Point2D: ...
class Point3D: ...
class Rectangle: ...
class HotKeyEvent: ...

UOEntity = Union[int, Item, Mobile]

class Misc:
    class Context:
        Entry: str
        Response: int

    class MapInfo:
        Facet: int
        MapEnd: Point2D
        MapOrigin: Point2D
        PinPosition: Point2D
        Serial: int

    @classmethod
    def AllSharedValue(cls) -> List[str]: ...
    @classmethod
    def AppendNotDupToFile(cls, fileName: str, lineOfData: str) -> bool: ...
    @classmethod
    def AppendToFile(cls, fileName: str, lineOfData: str) -> bool: ...
    @classmethod
    def Beep(cls) -> None: ...
    @classmethod
    def CancelPrompt(cls) -> None: ...
    @classmethod
    def CaptureNow(cls) -> str: ...
    @classmethod
    def ChangeProfile(cls, profileName: str) -> None: ...
    @classmethod
    def CheckIgnoreObject(cls, serial: UOEntity) -> bool: ...
    @classmethod
    def CheckSharedValue(cls, name: str) -> bool: ...
    @classmethod
    def ClearDragQueue(cls) -> None: ...
    @classmethod
    def ClearIgnore(cls) -> None: ...
    @classmethod
    def CloseBackpack(cls) -> None: ...
    @classmethod
    def CloseMenu(cls) -> None: ...
    @classmethod
    def ConfigDirectory(cls) -> str: ...
    @classmethod
    def ContextReply(cls, serial: UOEntity, respone_num: Union[str, int]) -> None: ...
    @classmethod
    def DataDirectory(cls) -> str: ...
    @classmethod
    def DeleteFile(cls, fileName: str) -> bool: ...
    @classmethod
    def Disconnect(cls) -> None: ...
    @classmethod
    def Distance(cls, X1: int, Y1: int, X2: int, Y2: int) -> int: ...
    @classmethod
    def DistanceSqrt(cls, point_a: Point3D, point_b: Point3D) -> float: ...
    @classmethod
    def ExportPythonAPI(cls, path: str | None = ..., pretty: bool = ...) -> None: ...
    @classmethod
    def FilterSeason(cls, enable: bool, seasonFlag: int) -> None: ...
    @classmethod
    def FocusUOWindow(cls) -> None: ...
    @classmethod
    def GetContPosition(cls) -> Point2D: ...
    @classmethod
    def GetMapInfo(cls, serial: int) -> "Misc.MapInfo": ...
    @classmethod
    def GetMenuTitle(cls) -> str: ...
    @classmethod
    def GetWindowSize(cls) -> Rectangle: ...
    @classmethod
    def HasMenu(cls) -> bool: ...
    @classmethod
    def HasPrompt(cls) -> bool: ...
    @classmethod
    def HasQueryString(cls) -> bool: ...
    @classmethod
    def IgnoreObject(cls, serial: UOEntity) -> None: ...
    @classmethod
    def Inspect(cls) -> None: ...
    @classmethod
    def IsItem(cls, serial: int) -> bool: ...
    @classmethod
    def IsMobile(cls, serial: int) -> bool: ...
    @classmethod
    def LastHotKey(cls) -> HotKeyEvent: ...
    @classmethod
    def LeftMouseClick(cls, xpos: int, ypos: int, clientCoords: bool = ...) -> None: ...
    @classmethod
    def MenuContain(cls, text: str) -> bool: ...
    @classmethod
    def MenuResponse(cls, text: str) -> None: ...
    @classmethod
    def MouseLocation(cls) -> Point2D: ...
    @classmethod
    def MouseMove(cls, posX: int, posY: int) -> None: ...
    @classmethod
    def NextContPosition(cls, x: int, y: int) -> None: ...
    @classmethod
    def NoOperation(cls) -> None: ...
    @classmethod
    def NoRunStealthStatus(cls) -> bool: ...
    @classmethod
    def NoRunStealthToggle(cls, enable: bool) -> None: ...
    @classmethod
    def OpenPaperdoll(cls) -> None: ...
    @classmethod
    def Pause(cls, millisec: int) -> None: ...
    @classmethod
    def PetRename(cls, serial: Union[Mobile, int], name: str) -> None: ...
    @classmethod
    def PlaySound(cls, sound: int, x: int, y: int, z: int) -> None: ...
    @classmethod
    def QueryStringResponse(cls, okcancel: bool, response: str) -> None: ...
    @classmethod
    def RazorDirectory(cls) -> str: ...
    @classmethod
    def ReadSharedValue(cls, name: str) -> Any: ...
    @classmethod
    def RemoveLineInFile(cls, fileName: str, lineOfData: str) -> bool: ...
    @classmethod
    def RemoveSharedValue(cls, name: str) -> None: ...
    @classmethod
    def ResetPrompt(cls) -> None: ...
    @classmethod
    def ResponsePrompt(cls, text: str) -> None: ...
    @classmethod
    def Resync(cls) -> None: ...
    @classmethod
    def RightMouseClick(cls, xpos: int, ypos: int, clientCoords: bool = ...) -> None: ...
    @classmethod
    def ScriptCurrent(cls, fullpath: bool = ...) -> str: ...
    @classmethod
    def ScriptDirectory(cls) -> str: ...
    @classmethod
    def ScriptIsSuspended(cls, scriptfile: str) -> bool: ...
    @classmethod
    def ScriptResume(cls, scriptfile: str) -> None: ...
    @classmethod
    def ScriptRun(cls, scriptfile: str) -> None: ...
    @classmethod
    def ScriptStatus(cls, scriptfile: str) -> bool: ...
    @classmethod
    def ScriptStop(cls, scriptfile: str) -> None: ...
    @classmethod
    def ScriptStopAll(cls, skipCurrent: bool = ...) -> None: ...
    @classmethod
    def ScriptSuspend(cls, scriptfile: str) -> None: ...
    @classmethod
    def SendMessage(cls, msg: Any, color: int | bool | None = ..., wait: bool = ...) -> None: ...
    @classmethod
    def SendToClient(cls, keys: str) -> None: ...
    @classmethod
    def SetSharedValue(cls, name: str, value: Any) -> None: ...
    @classmethod
    def ShardName(cls) -> str: ...
    @classmethod
    def UnIgnoreObject(cls, serial: UOEntity) -> None: ...
    @classmethod
    def UseContextMenu(cls, serial: int, choice: Union[str, int], delay: int) -> bool: ...
    @classmethod
    def WaitForContext(
        cls,
        serial: Union[Mobile, Item, int],
        delay: int,
        showContext: bool = ...,
    ) -> List["Misc.Context"]: ...
    @classmethod
    def WaitForMenu(cls, delay: int) -> bool: ...
    @classmethod
    def WaitForPrompt(cls, delay: int) -> bool: ...
    @classmethod
    def WaitForQueryString(cls, delay: int) -> bool: ...
